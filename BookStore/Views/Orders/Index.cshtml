@model IEnumerable<BookStore202401.Models.ViewModels.OrderIndexVm>

@using BookStore.Models.Infrastructure;
@{
    ViewBag.Title = "管理訂單";
    IEnumerable<SelectListItem> status = ViewBag.StatusSelectList;
}
<style>
    /* 這裡寫入你的 CSS 樣式 */
    .product-action button {
        border: none;
        padding: 0;
        background-color: transparent;
        cursor: pointer;
    }

        .product-action button:hover {
            background-color: #007bff;
            color: #fff;
        }

    .product-action a.badge-primary {
        background-color: transparent;
        color: #28a745 !important;
    }

    .container-1 {
        position: relative;
    }

        .container-1 input[type="text"] {
            width: 100%;
            height: 38px;
            padding: 10px;
            font-size: 16px;
            border: none; /* 移除邊框 */
            border-radius: 30px;
            outline: none; /* 移除聚焦的邊框效果 */
            box-shadow: none;
        }

        .container-1 .icon {
            position: absolute;
            top: 50%;
            right: 10px;
            transform: translateY(-50%);
            cursor: pointer;
        }
</style>
<div class="container-fluid">
    <div class="page-title">
        <div class="row">
            <div class="col-6 d-flex">
                <i class="fa-solid fa-book-open-reader" style="color: #7366ff ; font-size:30px"></i>

                <h4 class="fw-bold" style="color: #7366ff ">&nbsp;&nbsp;訂單管理</h4>
            </div>
            <div class="col-6">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="~/WeHome/Index">
                            <svg class="stroke-icon">
                                <use href="~/svg/icon-sprite.svg#stroke-home"></use>
                            </svg>
                        </a>
                    </li>
                    <li class="breadcrumb-item"><a href="~/Orders/Index">訂單管理</a></li>
                    <li class="breadcrumb-item"><a href="~/EBooksPermission/Index">電子書權限管理</a></li>
                </ol>
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <form method="get" id="selectForm" class="mb-3">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-11 col-xl-2">
                        <label for="memberName"><strong>查詢買家:</strong></label>
                        <div>
                            @Html.TextBox("memberName", null, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-11 col-xl-2">
                        <label for="status"><strong>訂單狀態:</strong></label>
                        <div>
                            @Html.DropDownList("status", status, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-xl-4">
                        <label><strong>下單時間:</strong></label>
                        <div class="row">
                            <div class="col-5">
                                <input class="form-control dateinput" id="datetime-local" type="date" name="startDate" value=publisherdate>
                            </div>
                            <div class="col-1"><label>~</label></div>
                            <div class="col-5">
                                <input class="form-control dateinput" id="datetime-local" type="date" name="endDate" value=publisherdate>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl">
                        <label style="visibility:hidden">1</label>
                        <div>
                            <input type="submit" value="查詢" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </form>

        <table class="table" id="bobo">
            <thead>
                <tr>
                    <th>
                        <strong>  @Html.DisplayNameFor(model => model.MemberName)</strong>
                    </th>
                    <th>
                        <strong>    @Html.DisplayNameFor(model => model.OrderDate)</strong>
                    </th>
                    <th>
                        <strong>    @Html.DisplayNameFor(model => model.Status)</strong>
                    </th>
                    <th>
                        <strong>    @Html.DisplayNameFor(model => model.TotalAmount)</strong>
                    </th>

                    <th>
                        <strong>  @Html.DisplayNameFor(model => model.DiscountAmount)</strong>
                    </th>
                    <th>
                        <strong>   @Html.DisplayNameFor(model => model.PaymentMethod)</strong>
                    </th>
                    <th>
                        <strong>  修改</strong>
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.MemberName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TotalAmount)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.DiscountAmount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PaymentMethod)
                        </td>
                        <td>
                            <div class="product-action">
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="">
                                    <i class="fas fa-pencil-alt" style="color: #2cb8bd; font-size: 17px"></i>
                                </a>
                                &thinsp;
                                <a href="@Url.Action("Details", new { id = item.Id })" class="">
                                    <i class="fa-solid fa-calendar-week" style="color: #f38181; font-size: 17px"></i>
                                </a>
                            </div>
                        </td>


                    </tr>
                }
            </tbody>

        </table>
    </div>
</div>
            </div>
        </div>
    </div>
</div>
@*@section Scripts{
        <script>
            new DataTable('#bobo');
        </script>
        <style>
            h2 {
                display: block;
            }
        </style>
    }*@
@section Styles{
    <style>
        .pagination li {
            cursor: pointer;
        }

        .currentPage {
            background-color: lightblue;
        }

        h2 {
            display: block;
        }
    </style>
}

@section Scripts{
    <script>
        const divSpot = document.querySelector('#divSpot');
        const ulPaging = document.querySelector('#ulPaging');
        const inpSearch = document.querySelector('#inputKeyword');
        const searchData = {
            "categoryId": 0,
            "keyword": "",
            "page": 1,
            "pageSize": 9,
            "sortType": "asc",
            "sortBy": ""
        };
        const loadSpots = async () => {
            const response = await fetch('@Url.Content("~/api/Spots")',{
                'method':'POST',
                'body': JSON.stringify(searchData),
                'headers': {
                    'Content-Type':'application/json'
                }
            })
            const spots = await response.json()
            //console.log(spots)
            //載入景點
            const htmlSpots = spots.spotsResult.map(spot => {
                return(`
        <div class="col">
                <div class="card">
                                    <img src="${spot.spotImage}" class="card-img-top" alt="${spot.spotTitle}">
                    <div class="card-body">
                                <h5 class="card-title">${spot.spotId} ${spot.spotTitle}</h5>
                        <p class="card-text">${ spot.spotDescription.length <= 100 ? spot.spotDescription : spot.spotDescription.substring(0,100) }...</p>
                    </div>
                    <div class="card-footer">
                        <small class="text-body-secondary">${ spot.address }</small>
                    </div>

                </div>
            </div> `)
            })
                divSpot.innerHTML = htmlSpots.join("")

            //產生分頁按鈕
            const pageArray = Array.from({ length: +spots.totalPages }, (_, index) => index + 1);
            const htmlPaging = pageArray.map(page => {
                if (page > 10) return;
                if (page === 1) {
                    return (`
                                <li class="page-item" onclick="pagingHandler(${page})">
                                            <a class="page-link currentPage"> ${page}</a>
                                </li>
                       `)
                }else{
                    return (`
                                <li class="page-item" onclick="pagingHandler(${page})">
                                            <a class="page-link"> ${page}</a>
                                </li>
                       `)
                }

            });
            ulPaging.innerHTML = htmlPaging.join("");
        };

        //分頁
        const pagingHandler = async(page) => {
            searchData.page = page;
            await loadSpots();

            //設定分頁按鈕背景色
            const links = ulPaging.querySelectorAll('.page-link');
            links.forEach((a,index) => {
                a.classList.remove('currentPage');
                 if (+a.textContent === page) {
                    a.classList.add('currentPage');
                 }
            })
        };

        //搜尋
        inpSearch.addEventListener('keydown', evt => {
            if (evt.keyCode === 13) {
                searchData.keyword = evt.target.value;
                searchData.page = 1;
                loadSpots();
            }

        })


        loadSpots();
    </script>
}
