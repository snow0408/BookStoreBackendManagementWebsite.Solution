@model BookStore202401.Models.ViewModels.OrderIndexVm

@{
    ViewBag.Title = "更改訂單狀態";
    IEnumerable<SelectListItem> statusSelectList = ViewBag.StatusSelectList;
}

<div class="container-fluid">
    <div class="page-title">
        <div class="row">
            <div class="col-6 d-flex">
                <i class="fa-solid fa-pen-to-square" style="color: #B197FC; font-size:30px"></i>
                <h4 class="fw-bold" style="color: #7366ff ">&nbsp;&nbsp;@ViewBag.Title</h4>
            </div>
            <div class="col-6">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="~/WeHome/Index">
                            <svg class="stroke-icon">
                                <use href="~/svg/icon-sprite.svg#stroke-home"></use>
                            </svg>
                        </a>
                    </li>
                    <li class="breadcrumb-item"><a href="~/Orders/Index">訂單管理</a></li>
                    <li class="breadcrumb-item active"><a href="~/Orders/Edit">更改訂單狀態</a></li>
                </ol>
            </div>
        </div>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-xl-6">
                <div class="card">
                    <div class="card-body card-wrapper input-radius">
                        <div class="row">
                            <div class="col">
                                <div class="form-horizontal">

                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.Id)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.MemberName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.MemberName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.MemberName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.PaymentMethod, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger", disabled = "disabled" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @{
                                                if (Model.Status == "已完成")
                                                {@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } }) }
                                            else
                                            {
                                                @*執行下拉選單用switch取Model.Status的值，case如果是"未付款"，則只顯示"未出貨"和"未付款"的選項*@

                                                switch (Model.Status)
                                                {
                                                    case "未付款": statusSelectList = statusSelectList.Where(x => x.Value == "未出貨" || x.Value == "未付款"); break;
                                                    case "未出貨": statusSelectList = statusSelectList.Where(x => x.Value == "未出貨" || x.Value == "已取消" || x.Value == "已送達" || x.Value == "已退款"); break;
                                                    case "已送達": statusSelectList = statusSelectList.Where(x => x.Value == "已完成" || x.Value == "已退貨" || x.Value == "已送達"); break;

                                                }

                                                @Html.DropDownListFor(model => model.Status, statusSelectList, new { @class = "form-select" })}
                                            }

                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.DiscountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DiscountAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.DiscountAmount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="修改" class="btn btn-primary m-r-15" /> @Html.ActionLink("回上一頁", "Index", null, new { @class = "btn btn-light" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('.dropdown-item').on('click', function () {
            var selectedStatusText = $(this).text();
            $('#Status').val(selectedStatusText);
        });
    });
</script>
