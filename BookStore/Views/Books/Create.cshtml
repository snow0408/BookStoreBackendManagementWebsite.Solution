@model BookStore.Models.ViewModels.BooksCreateVm@{    ViewBag.Title = "Create";    string categroySelect = ViewBag.CategorySelect;    IEnumerable<SelectListItem> bookLanguageList = ViewBag.BookLanguageList;}<style>.background-image {    background-image: url('@Url.Content("~/images/InputBg.jpg")');    background-size: cover;    background-position: center;    background-repeat: no-repeat;    height: 100vh;}</style>@using (Html.BeginForm()){@Html.AntiForgeryToken()<div class="container-fluid background-image">    <div class="page-title">        <div class="row">            <div class="col-6 d-flex align-items-center">                <i class="fa-solid fa-circle-plus" style="color: #7366ff; font-size:30px"></i>                <h4 class="fw-bold" style="color: #7366ff;">&nbsp;&nbsp;書籍分類列表</h4>            </div>            <div class="col-6">                <ol class="breadcrumb">                    <li class="breadcrumb-item">                        <a href="~/WeHome/Index">                            <svg class="stroke-icon">                                <use href="~/svg/icon-sprite.svg#stroke-home"></use>                            </svg>                        </a>                    </li>                    <li class="breadcrumb-item">書籍後臺管理</li>                    <li class="breadcrumb-item active">書籍分類列表</li>                </ol>            </div>        </div>    </div>    <div class="row justify-content-center">        <!-- 將卡片置中 -->        <div class="col-xl-6">            <!-- 將這個 div 移到這裡 -->            <div class="card">                <div class="card-body card-wrapper input-radius">                    <div class="">                        <div class="">                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })                            <div class="mb-3 m-form__group">                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })                                <div class="input-group">                                    <span class="input-group-text"><i class="fa-solid fa-book" style="color: #B197FC;"></i></span>                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })                                </div>                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })                            </div>                            <div class="mb-3 m-form__group">                                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "form-label" })                                <div class="input-group">                                    <span class="input-group-text"><i class="fa-solid fa-user" style="color: #B197FC;"></i></span>                                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })                                </div>                                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })                            </div>                            <div class="mb-2">                                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "form-label col-md-2" })                                <div id="scrollable-dropdown-menu">                                    <input class="categoryInput form-control" type="text" placeholder="請輸入分類名稱" id="category" name="CategoryName" />                                </div>                                <input type="text" id="categoyId" hidden name="CategoryID" value="@ViewBag.CategoryId" />                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })                                <!-- /div -->                            </div>                            <div class="mb-2">                                @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "form-label col-md-2" })                                <!-- div class="col-md-10"-->                                @*@Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })*@                                @Html.DropDownListFor(model => model.Language, bookLanguageList, new { @class = "form-control" })                                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })                                <!-- /div -->                            </div>                            <!-- End of unchanged sections -->                            <div class="mb-3">                                <input type="submit" value="新增" class="btn btn-primary m-r-15" />                                @Html.ActionLink("回到上一頁", "Index", null, new { @class = "btn btn-light" })                                <h3 style="color: #aeaeae; font-family: 'Times New Roman', Times, serif; text-align: right;">ADD NEW BOOKS</h3>                            </div>                                                                              </div>                    </div>                </div>                            </div>        </div>    </div></div>        }        @section Scripts {            @Scripts.Render("~/bundles/jqueryval")            <script>    const categoryInput = document.querySelector(".categoryInput");    const categoyId = document.querySelector("#categoyId");    let categoryArr = [];    let url = "/api/CategoriesAPI";    //取得分類資料    $.getJSON(url)    .done(function (data) {        $.each(data, function (item, key) { categoryArr.push({ id: key, value: item }) });        //取得之前選取得值        const categroySelectJson = @Html.Raw(Json.Encode(categroySelect));        console.log(categroySelectJson);        categoryInput.value = categroySelectJson;        console.log(categoryInput);        tagifyCategory = new Tagify(categoryInput, {            enforceWhitelist: true,            mode: "select",            whitelist: categoryArr,            mapValueTo: "id"        });    });    //更新 select 選取值    categoryInput.addEventListener("change", () => {        categoyId.value = tagifyCategory.value[0].id        console.log(categoyId.value);    });            </script>        }